#!/usr/bin/env bash

PROGNAME=$(basename $0);
MAKEDOCUMENT_DIR=$(dirname $(realpath "$0"))
MODELS=($( ls $MAKEDOCUMENT_DIR/model ))
declare -a DOCUMENT_CLASSES=()

for MODEL in "${MODELS[@]}"; do
    DOCUMENT_CLASSES+=("$MODEL")
done

printHelp() {
    cat << "EOF"
    USAGE: makedocument [arguments] 

    Arguments: 

    [-c: class]      [required]   Specifies document type
         article                  LaTeX template and bibliography file for academic papers
         readme                   Markdown template for technical project documentation

    [-l: location]   [required]   Specifies target directory location
EOF
}

checkForInvalidInput() {
    if [[ ( ! " ${DOCUMENT_CLASSES[*]} " =~ " ${CLASS} " ) && ( -d "$TARGET_DIR" ) ]]; then
        return 0
    fi
    return 1
}


latexMakedocument() {
    TEX_DIR=$TARGET_DIR/latex
    if ! [[ -d "$TEX_DIR" ]] ; then
        mkdir $TARGET_DIR/latex
    fi

    cp $MAKEDOCUMENT_DIR/model/$CLASS/templates/$CLASS.tex $TEX_DIR/$CLASS.tex
    ln -s $MAKEDOCUMENT_DIR/references/bib/references.bib $TEX_DIR/references.bib
}

markdownMakedocument() {
    DOC_DIR=$TARGET_DIR/docs
    if ! [[ -d "$DOC_DIR" ]] ; then
        mkdir $TARGET_DIR/docs
    fi

    cp $MAKEDOCUMENT_DIR/model/$CLASS/templates/$CLASS.md $DOC_DIR/$CLASS.md
}

# END OF UTILS
# ACTUAL CODE "STARTS" HERE

if [ $# -eq 0 ] ; then
    printHelp
    exit 1
fi

while getopts "c:l:h" o; do case "${o}" in
    c) CLASS=${OPTARG} ;;
    l) TARGET_DIR=${OPTARG} ;;
    h) printHelp && exit 0;;
    *) printf "Invalid option: -%s\\n" "$OPTARG" && exit 1 ;;
esac done

checkForInvalidInput && exit 1

if [ "$CLASS" == "article" ] ; then
    latexMakedocument
elif [ "$CLASS" == "readme" ] ; then
    markdownMakedocument
fi

